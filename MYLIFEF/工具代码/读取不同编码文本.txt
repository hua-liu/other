/** 
 * 判断文件的编码格式 
 * @param fileName :file 
 * @return 文件编码格式 
 * @throws Exception 
 */  
public static String codeString(File file){  
		BufferedInputStream bin=null;
		String code = null;  
		try{
		    bin = new BufferedInputStream(new FileInputStream(file));  
		    int p = (bin.read() << 8) + bin.read();  
		    switch (p) {  
	        case 0xefbb:  
	            code = "UTF-8";  
	            break;  
	        case 0xfffe:  
	            code = "Unicode";  
	            break;  
	        case 0xfeff:  
	            code = "UTF-16BE";  
	            break;  
	        default:  
	            code = "GBK";  
		    }
		    return code;
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			if(bin!=null)
				try {
					bin.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		}
	    return "UTF-8";  
FileInputStream fInputStream = new FileInputStream(file);  
//code为上面方法里返回的编码方式  
InputStreamReader inputStreamReader = new InputStreamReader(fInputStream, code);  
BufferedReader in = new BufferedReader(inputStreamReader);  
  
String strTmp = "";  
//按行读取  
while (( strTmp = in.readLine()) != null) {  
    sBuffer.append(strTmp + "/n");  
}  
return sBuffer.toString();  